/*
 * The MIT License
 *
 * Copyright 2015 Timothy Roe Jr.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 *
 * @author Timothy Roe Jr
 * @version 6/25/15
 * 
 */
import javax.swing.JComboBox;
import net.sourceforge.rconed.SourceRcon;
import net.sourceforge.rconed.exception.ResponseEmpty;
import net.sourceforge.rconed.exception.BadRcon;
import javax.swing.JOptionPane;

public class rconappletgui extends javax.swing.JApplet {
    private String cmd;
    private String exec;

    /**
     * Initializes the applet rconappletgui
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rconappletgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rconappletgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rconappletgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rconappletgui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        rconCommand = new javax.swing.JTextField();
        sendCommand = new javax.swing.JButton();
        serverResponse = new java.awt.TextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rconPassword = new javax.swing.JTextField();
        presets = new javax.swing.JComboBox();

        setName("RCON Controller"); // NOI18N

        jLabel1.setText("The Team Spirit Gibus Dynasty RCON Controller");

        jLabel2.setText("Copyright © 2015 Timothy E. Roe, Jr. and Roeboat, LLC. Under MIT License.");

        rconCommand.setToolTipText("");
        rconCommand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rconCommandActionPerformed(evt);
            }
        });

        sendCommand.setText("Run Command");
        sendCommand.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendCommandMouseClicked(evt);
            }
        });

        serverResponse.setEditable(false);

        jLabel3.setText("Command:");

        jLabel4.setText("Password:");

        presets.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select A Preset", "Ultiduo", "UGC HL Standard", "UGC HL Stopwatch", "UGC HL Koth", "UGC Config OFF" }));
        presets.setToolTipText("");
        presets.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                presetsMouseClicked(evt);
            }
        });
        presets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presetsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serverResponse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(presets, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sendCommand))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rconCommand)
                            .addComponent(rconPassword)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rconCommand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rconPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendCommand)
                    .addComponent(presets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(serverResponse, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>                        

    private void rconCommandActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void sendCommandMouseClicked(java.awt.event.MouseEvent evt) {                                         
        // TODO add your handling code here:
        int localPort = 27015;
    	String ip = "71.116.203.101";
    	String password = rconPassword.getText();
    	exec = rconCommand.getText();
        String console = "";
        
        //Select A Preset, Ultiduo, UGC HL Standard, UGC HL Stopwatch, UGC HL Koth, UGC Config OFF
        try {	
            console = SourceRcon.send(ip, localPort, password, exec);
            serverResponse.setText(console);
            rconCommand.setText("");
    	} catch (Exception e) {
            System.out.println("EXCEPTION");
            serverResponse.setText("ERROR: COMMAND FAILED OR ERROR WITH SERVER RESPONSE TO APPLICATION\nIf you are changing the level the level is changing no need to panic this is a server response issue.");
            //serverResponse.setText(console);

    	}
    }                                        

    
    private void presetsActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        presets = (JComboBox)evt.getSource();
        cmd = (String)presets.getSelectedItem();
        updateField(cmd);
        
    }                                       

    protected void updateField(String command) {
        exec = command;
        switch (exec) {
            case "Ultiduo":
                exec = "exec ultiduo";
                rconCommand.setText(exec);
                break;
            case "UGC HL Standard":
                exec = "exec ugc_HL_standard";
                rconCommand.setText(exec);
                break;
            case "UGC HL Stopwatch":
                exec = "exec ugc_HL_stopwatch";
                rconCommand.setText(exec);
                break;
            case "UGC HL Koth":
                exec = "exec ugc_HL_koth";
                rconCommand.setText(exec);
                break;
            case "UGC Config OFF":
                exec = "exec ugc_off";
                rconCommand.setText(exec);
                break;
            case "Select A Preset":
                exec = "";
                rconCommand.setText(exec);
        }
    }
    
    private void presetsMouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
    }                                    

    
    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox presets;
    private javax.swing.JTextField rconCommand;
    private javax.swing.JTextField rconPassword;
    private javax.swing.JButton sendCommand;
    private java.awt.TextArea serverResponse;
    // End of variables declaration                   
    
}
